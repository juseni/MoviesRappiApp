// Generated by Dagger (https://google.github.io/dagger).
package com.juan.nino.moviesrappiapp.di;

import androidx.lifecycle.ViewModel;
import com.juan.nino.domain.interactor.usecases.PopularMoviesUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvidePopularMoviesViewModelFactory implements Factory<ViewModel> {
  private final AppModule module;

  private final Provider<PopularMoviesUseCase> popularMoviesUseCaseProvider;

  public AppModule_ProvidePopularMoviesViewModelFactory(
      AppModule module, Provider<PopularMoviesUseCase> popularMoviesUseCaseProvider) {
    this.module = module;
    this.popularMoviesUseCaseProvider = popularMoviesUseCaseProvider;
  }

  @Override
  public ViewModel get() {
    return provideInstance(module, popularMoviesUseCaseProvider);
  }

  public static ViewModel provideInstance(
      AppModule module, Provider<PopularMoviesUseCase> popularMoviesUseCaseProvider) {
    return proxyProvidePopularMoviesViewModel(module, popularMoviesUseCaseProvider.get());
  }

  public static AppModule_ProvidePopularMoviesViewModelFactory create(
      AppModule module, Provider<PopularMoviesUseCase> popularMoviesUseCaseProvider) {
    return new AppModule_ProvidePopularMoviesViewModelFactory(module, popularMoviesUseCaseProvider);
  }

  public static ViewModel proxyProvidePopularMoviesViewModel(
      AppModule instance, PopularMoviesUseCase popularMoviesUseCase) {
    return Preconditions.checkNotNull(
        instance.providePopularMoviesViewModel(popularMoviesUseCase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
