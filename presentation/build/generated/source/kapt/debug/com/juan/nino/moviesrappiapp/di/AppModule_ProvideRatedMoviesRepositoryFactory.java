// Generated by Dagger (https://google.github.io/dagger).
package com.juan.nino.moviesrappiapp.di;

import com.google.gson.Gson;
import com.juan.nino.data.db.dao.RatedMoviesDao;
import com.juan.nino.data.platform.NetworkHandler;
import com.juan.nino.data.respositories.RatedMoviesRepositoryImpl;
import com.juan.nino.data.source.source.MoviesApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideRatedMoviesRepositoryFactory
    implements Factory<RatedMoviesRepositoryImpl> {
  private final AppModule module;

  private final Provider<Gson> gsonProvider;

  private final Provider<MoviesApi> apiProvider;

  private final Provider<RatedMoviesDao> daoProvider;

  private final Provider<NetworkHandler> networkHandlerProvider;

  public AppModule_ProvideRatedMoviesRepositoryFactory(
      AppModule module,
      Provider<Gson> gsonProvider,
      Provider<MoviesApi> apiProvider,
      Provider<RatedMoviesDao> daoProvider,
      Provider<NetworkHandler> networkHandlerProvider) {
    this.module = module;
    this.gsonProvider = gsonProvider;
    this.apiProvider = apiProvider;
    this.daoProvider = daoProvider;
    this.networkHandlerProvider = networkHandlerProvider;
  }

  @Override
  public RatedMoviesRepositoryImpl get() {
    return provideInstance(module, gsonProvider, apiProvider, daoProvider, networkHandlerProvider);
  }

  public static RatedMoviesRepositoryImpl provideInstance(
      AppModule module,
      Provider<Gson> gsonProvider,
      Provider<MoviesApi> apiProvider,
      Provider<RatedMoviesDao> daoProvider,
      Provider<NetworkHandler> networkHandlerProvider) {
    return proxyProvideRatedMoviesRepository(
        module,
        gsonProvider.get(),
        apiProvider.get(),
        daoProvider.get(),
        networkHandlerProvider.get());
  }

  public static AppModule_ProvideRatedMoviesRepositoryFactory create(
      AppModule module,
      Provider<Gson> gsonProvider,
      Provider<MoviesApi> apiProvider,
      Provider<RatedMoviesDao> daoProvider,
      Provider<NetworkHandler> networkHandlerProvider) {
    return new AppModule_ProvideRatedMoviesRepositoryFactory(
        module, gsonProvider, apiProvider, daoProvider, networkHandlerProvider);
  }

  public static RatedMoviesRepositoryImpl proxyProvideRatedMoviesRepository(
      AppModule instance,
      Gson gson,
      MoviesApi api,
      RatedMoviesDao dao,
      NetworkHandler networkHandler) {
    return Preconditions.checkNotNull(
        instance.provideRatedMoviesRepository(gson, api, dao, networkHandler),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
