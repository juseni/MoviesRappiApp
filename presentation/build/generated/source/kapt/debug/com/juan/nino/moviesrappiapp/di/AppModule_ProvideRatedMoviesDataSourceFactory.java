// Generated by Dagger (https://google.github.io/dagger).
package com.juan.nino.moviesrappiapp.di;

import android.content.Context;
import com.juan.nino.data.db.dao.RatedMoviesDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideRatedMoviesDataSourceFactory
    implements Factory<RatedMoviesDao> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideRatedMoviesDataSourceFactory(
      AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public RatedMoviesDao get() {
    return provideInstance(module, contextProvider);
  }

  public static RatedMoviesDao provideInstance(
      AppModule module, Provider<Context> contextProvider) {
    return proxyProvideRatedMoviesDataSource(module, contextProvider.get());
  }

  public static AppModule_ProvideRatedMoviesDataSourceFactory create(
      AppModule module, Provider<Context> contextProvider) {
    return new AppModule_ProvideRatedMoviesDataSourceFactory(module, contextProvider);
  }

  public static RatedMoviesDao proxyProvideRatedMoviesDataSource(
      AppModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideRatedMoviesDataSource(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
