// Generated by Dagger (https://google.github.io/dagger).
package com.juan.nino.moviesrappiapp.di;

import com.juan.nino.data.source.source.MoviesApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideMoviesApiFactory implements Factory<MoviesApi> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideMoviesApiFactory(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MoviesApi get() {
    return provideInstance(module, retrofitProvider);
  }

  public static MoviesApi provideInstance(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideMoviesApi(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideMoviesApiFactory create(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideMoviesApiFactory(module, retrofitProvider);
  }

  public static MoviesApi proxyProvideMoviesApi(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideMoviesApi(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
