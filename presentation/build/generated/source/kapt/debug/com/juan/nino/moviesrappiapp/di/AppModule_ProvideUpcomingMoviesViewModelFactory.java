// Generated by Dagger (https://google.github.io/dagger).
package com.juan.nino.moviesrappiapp.di;

import androidx.lifecycle.ViewModel;
import com.juan.nino.domain.interactor.usecases.UpcomingMoviesUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideUpcomingMoviesViewModelFactory implements Factory<ViewModel> {
  private final AppModule module;

  private final Provider<UpcomingMoviesUseCase> upcomingMoviesUseCaseProvider;

  public AppModule_ProvideUpcomingMoviesViewModelFactory(
      AppModule module, Provider<UpcomingMoviesUseCase> upcomingMoviesUseCaseProvider) {
    this.module = module;
    this.upcomingMoviesUseCaseProvider = upcomingMoviesUseCaseProvider;
  }

  @Override
  public ViewModel get() {
    return provideInstance(module, upcomingMoviesUseCaseProvider);
  }

  public static ViewModel provideInstance(
      AppModule module, Provider<UpcomingMoviesUseCase> upcomingMoviesUseCaseProvider) {
    return proxyProvideUpcomingMoviesViewModel(module, upcomingMoviesUseCaseProvider.get());
  }

  public static AppModule_ProvideUpcomingMoviesViewModelFactory create(
      AppModule module, Provider<UpcomingMoviesUseCase> upcomingMoviesUseCaseProvider) {
    return new AppModule_ProvideUpcomingMoviesViewModelFactory(
        module, upcomingMoviesUseCaseProvider);
  }

  public static ViewModel proxyProvideUpcomingMoviesViewModel(
      AppModule instance, UpcomingMoviesUseCase upcomingMoviesUseCase) {
    return Preconditions.checkNotNull(
        instance.provideUpcomingMoviesViewModel(upcomingMoviesUseCase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
